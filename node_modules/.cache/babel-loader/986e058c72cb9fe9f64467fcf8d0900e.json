{"remainingRequest":"/Users/ahmed/Desktop/shoryan-front/node_modules/babel-loader/lib/index.js!/Users/ahmed/Desktop/shoryan-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ahmed/Desktop/shoryan-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ahmed/Desktop/shoryan-front/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ahmed/Desktop/shoryan-front/src/components/HelloWorld.vue","mtime":1574674264611},{"path":"/Users/ahmed/Desktop/shoryan-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ahmed/Desktop/shoryan-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ahmed/Desktop/shoryan-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ahmed/Desktop/shoryan-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuYXhpb3MuZ2V0KCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMiKS50aGVuKGZ1bmN0aW9uIChSZXNwb25zZSkgewogICAgICBfdGhpcy5wb3N0cyA9IFJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIG5hbWU6ICJIZWxsb1dvcmxkIiwKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcKICB9Cn07"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OANA,qBAMA;AAAA;;AACA,SAAA,KAAA,CACA,GADA,CACA,4CADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAJA;AAKA,GAZA;AAaA,EAAA,IAAA,EAAA,YAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA;AAdA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>hello</h1>\n    <div v-for=\"post in posts\" :key=\"post.userId\">\n      <h3>{{ post.title }}</h3>\n      <p>{{ post.body }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      posts: null\n    };\n  },\n  mounted() {\n    this.axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(Response => {\n        this.posts = Response.data;\n      });\n  },\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}